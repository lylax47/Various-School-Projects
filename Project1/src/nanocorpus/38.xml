<?xml version="1.0" encoding="UTF-8"?>
<GateDocument>
<!-- The document's features-->

<GateDocumentFeatures>
</GateDocumentFeatures>
<!-- The document content area with serialized nodes -->

<TextWithNodes> Считается, что электроника будущего должна соответствовать ряду условий. Вычислительные устройства должны быть быстродействующими и экономичными, а их производство – экологически чистым. Большие надежды возлагаются на так называемую молекулярную электронику,  в частности, основанную на использовании биомолекул. 
 
Создание молекулярных логических элементов – узкое место в деле построения молекулярных вычислительных устройств. Одной из существенных проблем логических элементов на основе рибозимов, ферментов или оптических материалов является различная природа входящего и исходящего сигнала, в отличие от электронных систем, в которых используется общий сигнал ввода и вывода (электрон). Поскольку вывод одного молекулярного логического элемента неприменим в качестве ввода для другого, возникают очевидные проблемы с объединением таких элементов в более-менее усложненные логические системы. 
 
Американские исследователи попытались обойти эту проблему, сконструировав логические элементы на основе ДНК. Прежде всего, они создали элементы AND (и), OR (или) и XOR (исключающее или). В качестве ввода для этих элементов используются фрагменты ДНК около 24 нуклеотидов длиной; в качестве вывода – тоже олигонуклеотиды. 
 
Рассмотрим более подробно принцип работы элемента AND (рисунок 1). Логический элемент состоит из двух олигонуклетидов: это флуоресцентно меченный 28-нуклеотидный AND-вывод (на схеме голубой), который до поры до времени не светится, поскольку связан с закрепленным AND-стационаром (трехцветный). Голубой участок AND-стационара формирует двойную спираль с AND-выводом, а белый и красный находятся в одноцепочечном состоянии и выполняют роль затравок для двух возможных AND-вводов. В таком виде элемент AND готов к работе. 
 
AND-вводы состоят из 24 нуклеотидов и комплементарны одной либо другой половине AND-стационара. При добавлении какого-либо одного AND-ввода он сначала связывается с соответствующим свободным концом AND-стационара (белым или красным), а затем частично вытесняет AND-вывод из комплекса с AND-стационаром. Однако AND-вывод при этом все равно остается в связанном состоянии, и <Node id="2122"/>флуоресценция<Node id="2135"/> не детектируется. Если же добавлены оба AND-ввода, AND-вывод вытесняется из комплекса с AND-стационаром полностью, переходит в раствор и начинает светиться – таким образом, логический элемент AND работает правильно. 
 
Аналогично устроены и элементы OR и XOR. В случае OR свободные одноцепочечные концы имеются как у OR-стационара, так и у OR-вывода. Один из OR-вводов полностью комплементарен OR-выводу, второй – OR-стационару. Таким образом, добавление любого из OR-вводов приводит к высвобождению OR-вывода из комплекса с OR-стационаром (рисунок 2, вверху). Для правильной работы логического элемента XOR в XOR-вводы добавлены цепочки из 20 нуклеотидов, комплементарные друг другу. Благодаря этому добавленные одновременно XOR-вводы образуют двойную спираль друг с другом, не вытесняя XOR-вывод из XOR-стационара (рисунок 2, внизу). 
 
Продемонстрировав работу логических элементов, ученые приступили к конструированию более сложных логических систем. Первым делом они создали полусумматор, состоящий из элементов XOR и AND (рисунок 3). Полусумматор – это логическая схема, которая складывает две двоичные цифры и выдаёт на выходе ноль, единицу либо сигнал переноса разряда. Для реализации такой схемы авторы смешали в одной пробирке компоненты элементов XOR и AND, пометив выводы для этих элементов двумя различными красителями. Добавляя один, второй или оба ввода и детектируя появление <Node id="3528"/>флуоресценции<Node id="3541"/>, исследователи убедились, что полусумматор работает верно. 
 
Следующая схема была еще более сложной: она состояла из двух элементов XOR и одного OR, как показано на рисунке 4. Тут выводы элементов XOR передаются в качестве ввода для элемента OR. Несложно заметить, что вся схема работает точно так же, как и один элемент XOR; однако в данном случае важно, что схема работала корректно – то есть, показана возможность создания и более сложных цепочек логических элементов на основе ДНК. 
 
Работа «Sequence-Addressable DNA Logic» опубликована в Small. 
  
 
 </TextWithNodes>
<!-- The default annotation set -->

<AnnotationSet>
</AnnotationSet>

<!-- Named annotation set -->

<AnnotationSet Name="Key">
<Annotation Id="0" Type="Флуоресценция" StartNode="3528" EndNode="3541">
</Annotation>
<Annotation Id="1" Type="Флуоресценция" StartNode="2122" EndNode="2135">
</Annotation>
</AnnotationSet>

</GateDocument>
